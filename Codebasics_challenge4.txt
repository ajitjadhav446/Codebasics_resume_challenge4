#Requests:1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

select distinct market
	   from dim_customer
       where customer = "Atliq Exclusive" 
       and 
       region = "APAC";
       
#2. What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields,
# unique_products_2020,unique_products_2021,percentage_chg

with cte as (
select count( distinct case when fiscal_year = 2020 then product_code else null end)  
as unique_products_2020,
count( distinct case when fiscal_year = 2021 then product_code else null end)  
as unique_products_2021
from fact_sales_monthly)

select * ,round(100*(1-unique_products_2020/unique_products_2021),2) as percentage_chg
from cte

#3. Provide a report with all the unique product counts for each segment and sort them in descending order of product counts.
 # The final output contains 2 fields,segment and product_count
 
 select segment,count(distinct product_code) as product_count
       from dim_product
       group by segment
       order by 2 desc;

#4. Follow-up: Which segment had the most increase in unique products in
#2021 vs 2020? The final output contains these fields,
#segment
#product_count_2020
#product_count_2021
#difference

with cte as (
select p.segment,count( distinct case when s.fiscal_year = 2020 then s.product_code else null end)  
as unique_products_2020,
count( distinct case when s.fiscal_year = 2021 then s.product_code else null end)  as unique_products_2021
from fact_sales_monthly as s
join dim_product as p
on s.product_code = p.product_code
group by 1)

select *,(unique_products_2021 - unique_products_2020) as difference
from cte
order by difference desc
limit 1;

#5. Get the products that have the highest and lowest manufacturing costs.
# The final output should contain these fields,
# product_code
# product
# manufacturing_cost
select fm.product_code,dp.product,fm.manufacturing_cost as maximum_mfg_cost
      from fact_manufacturing_cost as fm
      join dim_product as dp
      on fm.product_code = dp.product_code
      order by 3 desc
      limit 1;
      
select fm.product_code,dp.product,fm.manufacturing_cost as minimum_mfg_cost
      from fact_manufacturing_cost as fm
      join dim_product as dp
      on fm.product_code = dp.product_code
      order by 3 
      limit 1;
      
#6. Generate a report which contains the top 5 customers who received an
# average high pre_invoice_discount_pct for the fiscal year 2021 and in the
# Indian market. The final output contains these fields,
# customer_code
# customer
# average_discount_percentage

select p.customer_code,
	  c.customer,
      avg(pre_invoice_discount_pct) as average_discount_percentage
	  from fact_pre_invoice_deductions as p
	  join dim_customer as c
	  on p.customer_code = c.customer_code
      where p.fiscal_year = 2021
      and c.market = "India"
      group by 1
      order by 3 desc
      limit 5;
# 7. Get the complete report of the Gross sales amount for the customer “Atliq
# Exclusive” for each month. This analysis helps to get an idea of low and
# high-performing months and take strategic decisions.
# The final report contains these columns:
# Month
# Year
# Gross sales Amount
with cte as
(select s.date,
       gp.fiscal_year, 
	   s.customer_code,
       gp.gross_price
       from fact_gross_price as gp
       join fact_sales_monthly as s
       on gp.product_code = s.product_code and gp.fiscal_year = s.fiscal_year)
	
       select month(cte.date) as month,
             cte.fiscal_year as year,
             round(sum(cte.gross_price),2) as Gross_sales_Amount
       from cte 
       join
       dim_customer as dc
       on cte.customer_code = dc.customer_code
       where dc.customer = "Atliq Exclusive"
       group by 1,2;
       
# 7. Get the complete report of the Gross sales amount for the customer “Atliq
# Exclusive” for each month. This analysis helps to get an idea of low and
# high-performing months and take strategic decisions.
# The final report contains these columns:
# Month
# Year
# Gross sales Amount
with cte as
(select s.date,
       gp.fiscal_year, 
	   s.customer_code,
       gp.gross_price
       from fact_gross_price as gp
       join fact_sales_monthly as s
       on gp.product_code = s.product_code and gp.fiscal_year = s.fiscal_year)
	
       select month(cte.date) as month,
             cte.fiscal_year as year,
             round(sum(cte.gross_price),2) as Gross_sales_Amount
       from cte 
       join
       dim_customer as dc
       on cte.customer_code = dc.customer_code
       where dc.customer = "Atliq Exclusive"
       group by 1,2
       order by 2,1;
       
#8. In which quarter of 2020, got the maximum total_sold_quantity? The final
#output contains these fields sorted by the total_sold_quantity,
#Quarter
#total_sold_quantity

select get_fiscal_quarter(date) AS Quarters, sum(sold_quantity) as total_sold_quantity
		From fact_sales_monthly
        where fiscal_year = 2020
        Group by 1;
        
#9. Which channel helped to bring more gross sales in the fiscal year 2021
#and the percentage of contribution? The final output contains these fields,
#channel
#gross_sales_mln
#percentage

select dc.channel, Round(sum(gp.gross_price)/1000000,2) as Gross_sales_mln
	from fact_gross_price gp
    join fact_sales_monthly s
    on gp.product_code = s.product_code and gp.fiscal_year = s.fiscal_year
    join dim_customer dc
    on s.customer_code = dc.customer_code
    where s.fiscal_year = 2021
    group by 1
    order by 2;
    
#10. Get the Top 3 products in each division that have a high
#total_sold_quantity in the fiscal_year 2021? The final output contains these
#fields,
#division
#product_code
#product
#total_sold_quantity
#rank_order
with cte1 as
(
select dp.division, dp.product_code, 
		dp.product, sum(s.sold_quantity) as total_sold_quantity
		from fact_sales_monthly s
		join dim_product dp
		on s.product_code = dp.product_code
        where fiscal_year = 2021
        group by 1,2,3
	), 
	cte2 as 
    (
    select *, dense_rank() over (partition by division order by total_sold_quantity desc  ) as rank_order
		from cte1
         )
		 select * 
			from cte2 
            where rank_order < 4;

